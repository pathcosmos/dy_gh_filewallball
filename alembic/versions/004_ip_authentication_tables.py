"""Add IP authentication tables

Revision ID: 004
Revises: 003_advanced_performance_optimization
Create Date: 2025-01-28 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '004'
down_revision = '003_advanced_performance_optimization'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # IP 기반 인증 허용 목록 테이블
    op.create_table('allowed_ips',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('ip_address', sa.String(length=45), nullable=False),
        sa.Column('ip_range', sa.String(length=18), nullable=True),
        sa.Column('encryption_key', sa.String(length=255), nullable=False),
        sa.Column('key_hash', sa.String(length=255), nullable=False),
        sa.Column('permissions', sa.JSON(), nullable=True),
        sa.Column('max_uploads_per_hour', sa.Integer(), nullable=True),
        sa.Column('max_file_size', sa.BigInteger(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('expires_at', sa.DateTime(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('ip_address', 'encryption_key', name='unique_ip_key')
    )
    op.create_index(op.f('ix_allowed_ips_ip_address'), 'allowed_ips', 
                   ['ip_address'], unique=False)
    op.create_index(op.f('ix_allowed_ips_is_active'), 'allowed_ips', 
                   ['is_active'], unique=False)
    op.create_index(op.f('ix_allowed_ips_key_hash'), 'allowed_ips', 
                   ['key_hash'], unique=False)
    op.create_index(op.f('ix_allowed_ips_expires_at'), 'allowed_ips', 
                   ['expires_at'], unique=False)
    
    # IP 인증 로그 테이블
    op.create_table('ip_auth_logs',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('ip_address', sa.String(length=45), nullable=False),
        sa.Column('allowed_ip_id', sa.Integer(), nullable=True),
        sa.Column('api_key_hash', sa.String(length=255), nullable=True),
        sa.Column('action', sa.String(length=50), nullable=False),
        sa.Column('file_uuid', sa.String(length=36), nullable=True),
        sa.Column('user_agent', sa.Text(), nullable=True),
        sa.Column('request_time', sa.DateTime(), nullable=True),
        sa.Column('response_code', sa.Integer(), nullable=True),
        sa.Column('error_message', sa.Text(), nullable=True),
        sa.Column('request_size', sa.BigInteger(), nullable=True),
        sa.Column('processing_time_ms', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['allowed_ip_id'], ['allowed_ips.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ip_auth_logs_ip_address'), 'ip_auth_logs', 
                   ['ip_address'], unique=False)
    op.create_index(op.f('ix_ip_auth_logs_action'), 'ip_auth_logs', 
                   ['action'], unique=False)
    op.create_index(op.f('ix_ip_auth_logs_api_key_hash'), 'ip_auth_logs', 
                   ['api_key_hash'], unique=False)
    op.create_index(op.f('ix_ip_auth_logs_file_uuid'), 'ip_auth_logs', 
                   ['file_uuid'], unique=False)
    op.create_index(op.f('ix_ip_auth_logs_request_time'), 'ip_auth_logs', 
                   ['request_time'], unique=False)
    
    # IP별 Rate Limiting 테이블
    op.create_table('ip_rate_limits',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('ip_address', sa.String(length=45), nullable=False),
        sa.Column('api_key_hash', sa.String(length=255), nullable=True),
        sa.Column('window_start', sa.DateTime(), nullable=False),
        sa.Column('request_count', sa.Integer(), nullable=True),
        sa.Column('last_request_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('ip_address', 'api_key_hash', 'window_start', 
                           name='unique_rate_limit')
    )
    op.create_index(op.f('ix_ip_rate_limits_ip_address'), 'ip_rate_limits', 
                   ['ip_address'], unique=False)
    op.create_index(op.f('ix_ip_rate_limits_api_key_hash'), 'ip_rate_limits', 
                   ['api_key_hash'], unique=False)
    op.create_index(op.f('ix_ip_rate_limits_window_start'), 'ip_rate_limits', 
                   ['window_start'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # IP별 Rate Limiting 테이블 삭제
    op.drop_index(op.f('ix_ip_rate_limits_window_start'), 
                 table_name='ip_rate_limits')
    op.drop_index(op.f('ix_ip_rate_limits_api_key_hash'), 
                 table_name='ip_rate_limits')
    op.drop_index(op.f('ix_ip_rate_limits_ip_address'), 
                 table_name='ip_rate_limits')
    op.drop_table('ip_rate_limits')
    
    # IP 인증 로그 테이블 삭제
    op.drop_index(op.f('ix_ip_auth_logs_request_time'), 
                 table_name='ip_auth_logs')
    op.drop_index(op.f('ix_ip_auth_logs_file_uuid'), 
                 table_name='ip_auth_logs')
    op.drop_index(op.f('ix_ip_auth_logs_api_key_hash'), 
                 table_name='ip_auth_logs')
    op.drop_index(op.f('ix_ip_auth_logs_action'), 
                 table_name='ip_auth_logs')
    op.drop_index(op.f('ix_ip_auth_logs_ip_address'), 
                 table_name='ip_auth_logs')
    op.drop_table('ip_auth_logs')
    
    # IP 기반 인증 허용 목록 테이블 삭제
    op.drop_index(op.f('ix_allowed_ips_expires_at'), 
                 table_name='allowed_ips')
    op.drop_index(op.f('ix_allowed_ips_key_hash'), 
                 table_name='allowed_ips')
    op.drop_index(op.f('ix_allowed_ips_is_active'), 
                 table_name='allowed_ips')
    op.drop_index(op.f('ix_allowed_ips_ip_address'), 
                 table_name='allowed_ips')
    op.drop_table('allowed_ips')
    
    # ### end Alembic commands ### 