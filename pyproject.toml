[project]
name = "dy-gh-filewallball"
version = "0.1.0"
description = "File upload and management system with project key authentication"
authors = [
    {name = "FileWallBall Team", email = "team@filewallball.com"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi==0.116.1",
    "uvicorn==0.35.0",
    "sqlalchemy==2.0.42",
    "alembic==1.16.4",
    "pymysql==1.1.1",
    "aiomysql==0.2.0",
    "pydantic==2.11.7",
    "pydantic-settings==2.10.1",
    "python-multipart==0.0.20",
    "aiofiles==24.1.0",
    "python-magic==0.4.27",
    "pillow==11.3.0",
    "prometheus-client==0.22.1",
    "prometheus-fastapi-instrumentator==7.1.0",
    "structlog==25.4.0",
    "python-jose==3.5.0",
    "passlib==1.7.4",
    "bcrypt==4.3.0",
    "python-dotenv==1.1.1",
    "requests==2.32.4",
    "uvloop==0.21.0",
    "watchfiles==1.1.0",
    "httpx>=0.28.1",
    "pyjwt>=2.10.1",
    "chardet>=5.2.0",
    "psutil>=7.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "black>=24.1.1",
    "isort>=5.13.2",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "bandit>=1.7.7",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "black>=24.1.1",
    "isort>=5.13.2",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "bandit>=1.7.7",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
