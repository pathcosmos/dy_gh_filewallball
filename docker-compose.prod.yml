version: '3.8'

# Production environment overrides
services:
  # MariaDB Database - Production
  mariadb:
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-FileWallBall_Root_2025!}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Seoul
    ports: []  # No external port exposure for security
    volumes:
      - mariadb_prod_data:/var/lib/mysql
      - ./scripts/init-db-prod.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
      - mariadb_prod_backups:/var/backups
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --innodb-buffer-pool-size=1G --default-time-zone='+09:00'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-FileWallBall_Root_2025!}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
      disable: false
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
      - /var/tmp
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # FastAPI Application - Production
  app:
    environment:
      - DEBUG=false
      - ENVIRONMENT=production
      - LOG_LEVEL=WARNING
      - DB_HOST=mariadb
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "${APP_PORT:-18000}:8000"
    volumes:
      - uploads_prod_data:/app/uploads
      - logs_prod_data:/app/logs
      - backups_prod_data:/app/backups
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      disable: false
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
      - /var/tmp
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    restart: always

  # Nginx Reverse Proxy - Production
  nginx:
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - uploads_prod_data:/var/www/uploads:ro
      - logs_prod_data:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      disable: false
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
      - /var/cache/nginx
      - /var/run
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    restart: always
    profiles: []

  # Redis for Production (Optional)
  redis:
    image: redis:7-alpine
    container_name: filewallball-redis-prod
    restart: always
    ports: []  # No external port exposure
    volumes:
      - redis_prod_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      disable: false
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    profiles: []

  # Backup Service - Production
  backup:
    environment:
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
    volumes:
      - mariadb_prod_backups:/backup/db
      - uploads_prod_data:/backup/uploads
      - ./scripts/backup-prod.sh:/backup.sh:ro
      - ./backups:/host-backups
    healthcheck:
      test: ["CMD", "ps", "aux"]
      interval: 60s
      timeout: 10s
      retries: 2
      start_period: 30s
      disable: false
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
      - /var/tmp
    profiles: []

volumes:
  mariadb_prod_data:
    driver: local
  mariadb_prod_backups:
    driver: local
  uploads_prod_data:
    driver: local
  logs_prod_data:
    driver: local
  backups_prod_data:
    driver: local
  redis_prod_data:
    driver: local

# Use existing network from base compose
networks:
  app-network:
    external: true
