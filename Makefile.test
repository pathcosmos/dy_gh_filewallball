# FileWallBall 테스트 Makefile

.PHONY: help build-test run-test run-quick-test run-full-test clean-test logs-test

# 기본 도움말
help:
	@echo "FileWallBall 테스트 명령어:"
	@echo "  build-test      - 테스트 컨테이너 빌드"
	@echo "  run-test        - 전체 테스트 실행 (API 서버 대기 후)"
	@echo "  run-quick-test  - 빠른 테스트 실행"
	@echo "  run-full-test   - 전체 워크플로우 테스트 실행"
	@echo "  clean-test      - 테스트 컨테이너 및 결과 정리"
	@echo "  logs-test       - 테스트 컨테이너 로그 확인"

# Docker Compose 명령어 결정
DOCKER_COMPOSE := $(shell if command -v docker-compose >/dev/null 2>&1; then echo "docker-compose"; else echo "docker compose"; fi)

# 테스트 컨테이너 빌드
build-test:
	@echo "🔨 테스트 컨테이너 빌드 중..."
	$(DOCKER_COMPOSE) build filewallball-test
	@echo "✅ 테스트 컨테이너 빌드 완료"

# API 서버 시작 및 대기
start-api:
	@echo "🚀 FileWallBall API 서버 시작 중..."
	$(DOCKER_COMPOSE) up -d filewallball mariadb redis
	@echo "⏳ API 서버 준비 대기 중..."
	@timeout 300 bash -c 'until curl -s -f http://localhost:8001/health > /dev/null; do sleep 5; done' || (echo "❌ API 서버 시작 실패"; exit 1)
	@echo "✅ API 서버 준비 완료"

# 전체 테스트 실행
run-test: start-api
	@echo "🧪 전체 테스트 실행 중..."
	$(DOCKER_COMPOSE) --profile test run --rm filewallball-test /app/test_full_workflow.sh

# 빠른 테스트 실행
run-quick-test: start-api
	@echo "⚡ 빠른 테스트 실행 중..."
	$(DOCKER_COMPOSE) --profile test run --rm filewallball-test /app/quick_test.sh

# 전체 워크플로우 테스트 실행
run-full-test: start-api
	@echo "🔄 전체 워크플로우 테스트 실행 중..."
	$(DOCKER_COMPOSE) --profile test run --rm filewallball-test /app/test_full_workflow.sh

# 테스트 컨테이너 및 결과 정리
clean-test:
	@echo "🧹 테스트 정리 중..."
	$(DOCKER_COMPOSE) --profile test down filewallball-test
	$(DOCKER_COMPOSE) --profile test rm -f filewallball-test
	rm -rf test_results
	@echo "✅ 테스트 정리 완료"

# 테스트 컨테이너 로그 확인
logs-test:
	@echo "📋 테스트 컨테이너 로그:"
	$(DOCKER_COMPOSE) --profile test logs filewallball-test

# API 서버만 중지
stop-api:
	@echo "🛑 API 서버 중지 중..."
	$(DOCKER_COMPOSE) down filewallball mariadb redis
	@echo "✅ API 서버 중지 완료"

# 모든 서비스 중지 및 정리
stop-all:
	@echo "🛑 모든 서비스 중지 중..."
	$(DOCKER_COMPOSE) down
	@echo "✅ 모든 서비스 중지 완료"

# 테스트 결과 확인
check-results:
	@echo "📊 테스트 결과 확인:"
	@if [ -d "test_results" ]; then
		@ls -la test_results/
		@echo "--- 최근 테스트 로그 ---"
		@find test_results -name "*.log" -exec tail -20 {} \;
	else
		@echo "테스트 결과 디렉토리가 없습니다."
	fi

# 개발 환경 전체 시작
dev-start:
	@echo "🚀 개발 환경 시작 중..."
	$(DOCKER_COMPOSE) up -d
	@echo "⏳ 서비스 준비 대기 중..."
	@timeout 300 bash -c 'until curl -s -f http://localhost:8001/health > /dev/null; do sleep 5; done' || (echo "❌ 서비스 시작 실패"; exit 1)
	@echo "✅ 개발 환경 준비 완료"
	@echo "📊 Grafana: http://localhost:3000 (admin/admin)"
	@echo "📈 Prometheus: http://localhost:9090"
	@echo "🔍 API: http://localhost:8001"
	@echo "📚 API 문서: http://localhost:8001/docs"

# 개발 환경 중지
dev-stop:
	@echo "🛑 개발 환경 중지 중..."
	$(DOCKER_COMPOSE) down
	@echo "✅ 개발 환경 중지 완료"
