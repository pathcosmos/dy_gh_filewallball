apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-slave
  namespace: filewallball
spec:
  serviceName: redis-slave
  replicas: 2
  selector:
    matchLabels:
      app: redis-slave
  template:
    metadata:
      labels:
        app: redis-slave
    spec:
      serviceAccountName: redis
      containers:
      - name: redis
        image: redis:7-alpine
        command: ["redis-server"]
        args:
        - "/etc/redis/redis.conf"
        - "--slaveof"
        - "redis-master"
        - "6379"
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis-password
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis
        - name: redis-data
          mountPath: /data
        - name: redis-logs
          mountPath: /var/log/redis
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - filewallball2024
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - filewallball2024
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-config
        configMap:
          name: redis-advanced-config
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-slave-pvc
      - name: redis-logs
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: microk8s-hostpath
      resources:
        requests:
          storage: 1Gi
